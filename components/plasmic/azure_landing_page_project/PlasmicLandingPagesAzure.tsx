// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sjVjhDwAwAnzPPjTJm6wuM
// Component: 605jNZXoYd37ue
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: r_jYinXni53Wi6/component
import Button from "../../Button"; // plasmic-import: P-H-3Rnl6IFnul/component
import Section from "../../Section"; // plasmic-import: oWYT0gs3X9I9Bn/component
import ValueProp from "../../ValueProp"; // plasmic-import: 7mTzTuLk_-7aUm/component
import Banner from "../../Banner"; // plasmic-import: 3D6_6FjgJJmjcZ/component
import PriceCard from "../../PriceCard"; // plasmic-import: 7hmLk_KxVSEe3t/component
import FathymFooter from "../../FathymFooter"; // plasmic-import: vPms2ampwPsR50/component

import { useScreenVariants as useScreenVariantspCqVwGHbhXBxmj } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: pCQVwGHbhXBxmj/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_azure_landing_page_project.module.css"; // plasmic-import: sjVjhDwAwAnzPPjTJm6wuM/projectcss
import sty from "./PlasmicLandingPagesAzure.module.css"; // plasmic-import: 605jNZXoYd37ue/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: EI-h-RaqbBFLXd/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: 1iS8qc8aNS9fy4/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: Je5DF38UZGEgnB/icon
import TargetIcon from "./icons/PlasmicIcon__Target"; // plasmic-import: sPCmogus4ouA9k/icon
import FastIcon from "./icons/PlasmicIcon__Fast"; // plasmic-import: H-iJq0bUoQ97DL/icon
import StrongIcon from "./icons/PlasmicIcon__Strong"; // plasmic-import: 1JkRJedt6l5M0H/icon

export type PlasmicLandingPagesAzure__VariantMembers = {};

export type PlasmicLandingPagesAzure__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingPagesAzure__VariantsArgs;
export const PlasmicLandingPagesAzure__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLandingPagesAzure__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPagesAzure__ArgsType;
export const PlasmicLandingPagesAzure__ArgProps = new Array<ArgPropType>();

export type PlasmicLandingPagesAzure__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
  foreground2?: p.Flex<"div">;
  valuePropsSection?: p.Flex<typeof Section>;
  banner?: p.Flex<typeof Banner>;
  foreground3?: p.Flex<"div">;
  foreground4?: p.Flex<"div">;
  fathymFooter?: p.Flex<typeof FathymFooter>;
};

export interface DefaultLandingPagesAzureProps {}

function PlasmicLandingPagesAzure__RenderFunc(props: {
  variants: PlasmicLandingPagesAzure__VariantsArgs;
  args: PlasmicLandingPagesAzure__ArgsType;
  overrides: PlasmicLandingPagesAzure__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantspCqVwGHbhXBxmj()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">
          {"Fathym - Leverage the power of Azure - minus the complexity"}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={
            "Fathym - Leverage the power of Azure - minus the complexity"
          }
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={
            "Fathym - Leverage the power of Azure - minus the complexity"
          }
        />
        <meta
          key="description"
          name="description"
          content={
            "Deploy and host your React project on Fathym in just a few clicks. "
          }
        />
        <meta
          key="og:description"
          property="og:description"
          content={
            "Deploy and host your React project on Fathym in just a few clicks. "
          }
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={
            "Deploy and host your React project on Fathym in just a few clicks. "
          }
        />
        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/5a0b7f1216ccf9c1c1925b0f673cb62a.png"
          }
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={
            "https://site-assets.plasmic.app/5a0b7f1216ccf9c1c1925b0f673cb62a.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__nk86C)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pq5Bh
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {"Leverage the power of Azure, "}
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#5856D6" }}
                  >
                    {"minus the complexity."}
                  </span>
                </React.Fragment>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__i4PZ5
                )}
              >
                <React.Fragment>
                  <React.Fragment>{"Fathym operates as your "}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"virtual Azure cloud architect"}
                  </span>
                  <React.Fragment>
                    {
                      ".\n\nTake advantage of a best practice workflow, infrastructure and simplified experience \nfor deploying, hosting and managing future-proof web applications in Azure."
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>

              <p.PlasmicImg
                data-plasmic-name={"img"}
                data-plasmic-override={overrides.img}
                alt={"" as const}
                className={classNames(sty.img)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"70%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/azure_landing_page_project/images/microsoftTeamsImage4Png.png",
                  fullWidth: 1348,
                  fullHeight: 921,
                  aspectRatio: undefined
                }}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              {true ? (
                <div className={classNames(projectcss.all, sty.columns__yWm8T)}>
                  <div
                    className={classNames(projectcss.all, sty.column__xIgIc)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__lIgvW
                      )}
                      color={"blue" as const}
                      link={"/dashboard/create-project/recipe/react" as const}
                    >
                      {"Get Started for Free"}
                    </Button>
                  </div>

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.column__coEsM)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__oOYby
                        )}
                        component={Link}
                        href={"https://www.fathym.com/docs/" as const}
                        platform={"nextjs"}
                        target={"_blank" as const}
                      >
                        {"Learn more >"}
                      </p.PlasmicLink>
                    </div>
                  ) : null}
                </div>
              ) : null}
            </p.Stack>

            {true ? (
              <Section
                data-plasmic-name={"valuePropsSection"}
                data-plasmic-override={overrides.valuePropsSection}
                className={classNames("__wab_instance", sty.valuePropsSection)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dsPfW)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__x9KGo)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__eJi7
                      )}
                    >
                      {"See how React Compares"}
                    </h2>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o9KkV
                    )}
                  >
                    {
                      "Looking for the right framework for your next Jamstack example, tutorial or project?  Deploy React alongside any number of additional frameworks, get a feel for the development experience, and see how they perform.  Host your React app free with Fathym's micro frontend framework."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kO3Mc)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nuOoY)}
                  >
                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__w69Nu
                      )}
                      description={
                        <React.Fragment>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qki4M
                            )}
                          >
                            {
                              "Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. Deploy your Angular app now."
                            }
                          </div>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__hHlGr
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nn1Ob
                              )}
                            >
                              {"Angular Deployments >"}
                            </div>
                          </p.PlasmicLink>

                          {true ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__orvOt
                              )}
                              link={"/angular" as const}
                            >
                              {null}
                            </Button>
                          ) : null}
                        </React.Fragment>
                      }
                      flatIcon={true}
                      icon={
                        <CheckIcon
                          className={classNames(projectcss.all, sty.svg__nhqN)}
                          role={"img"}
                        />
                      }
                      title={"React vs Angular"}
                    />

                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp__jqVjh
                      )}
                      description={
                        <React.Fragment>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cbvH
                            )}
                          >
                            {
                              "The progressive javascript framework.  Already know HTML, CSS and JavaScript? Read the guide and start deploying VueJS apps in no time!               \n"
                            }
                          </div>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__fZuj
                            )}
                            component={Link}
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uaYf3
                              )}
                            >
                              {"Vue Deployments >"}
                            </div>
                          </p.PlasmicLink>

                          {true ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__jc7Vf
                              )}
                              link={"/vue" as const}
                            >
                              {null}
                            </Button>
                          ) : null}
                        </React.Fragment>
                      }
                      flatIcon={true}
                      icon={
                        <CheckIcon
                          className={classNames(projectcss.all, sty.svg__aUjOi)}
                          role={"img"}
                        />
                      }
                      title={"React vs VueJS"}
                    />

                    <ValueProp
                      className={classNames(
                        "__wab_instance",
                        sty.valueProp___2HPrv
                      )}
                      description={
                        <React.Fragment>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4P4Nk
                            )}
                          >
                            {
                              "Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app."
                            }
                          </div>

                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__a8CcV
                            )}
                            component={Link}
                            href={"/svelte-deployment" as const}
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0HiJw
                              )}
                            >
                              {"Svelte Deployments >"}
                            </div>
                          </p.PlasmicLink>

                          {true ? (
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__tcixz
                              )}
                              link={"/svelte-deployment" as const}
                            >
                              {null}
                            </Button>
                          ) : null}
                        </React.Fragment>
                      }
                      flatIcon={true}
                      icon={
                        <CheckIcon
                          className={classNames(projectcss.all, sty.svg__ysn1T)}
                          role={"img"}
                        />
                      }
                      title={"React vs Svelte"}
                    />
                  </p.Stack>
                </p.Stack>
              </Section>
            ) : null}

            <Banner
              data-plasmic-name={"banner"}
              data-plasmic-override={overrides.banner}
              className={classNames("__wab_instance", sty.banner)}
              image={{
                src: "/plasmic/azure_landing_page_project/images/editProjectViewPng.png",
                fullWidth: 2828,
                fullHeight: 1390,
                aspectRatio: undefined
              }}
              left={
                <React.Fragment>
                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rz42O
                      )}
                    >
                      {"React Example Tutorial"}
                    </div>
                  ) : null}

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p2NTv
                    )}
                  >
                    {"Get started without an Azure account."}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ciVwm
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {"Try Fathym for free in a "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, color: "#5856D6" }}
                      >
                        {"shared infrastructure environment"}
                      </span>
                      <React.Fragment>
                        {
                          ".  \n\nThe shared environment is powered by Fathym's best practice Azure infrastructure for you to take advantage of enterprise-grade "
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, color: "#5856D6" }}
                      >
                        {"performance, reliability and security"}
                      </span>
                      <React.Fragment>
                        {
                          ". All without touching Azure.\n\nWant to set up backend functionality and leverage Fathym’s Azure workflow in your own environment? Employ the same great tools and much more from your own "
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, color: "#5856D6" }}
                      >
                        {"automated Azure instance"}
                      </span>
                      <React.Fragment>{". "}</React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns__jGQr)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__fEaxU)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__nykeo
                        )}
                        color={"blue" as const}
                        link={"https://www.fathym.com/dashboard/" as const}
                      >
                        {"Get Started for Free"}
                      </Button>
                    </div>

                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__zypuv
                        )}
                      >
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__txxc5
                          )}
                          component={Link}
                          href={
                            "/docs/guides/deploying/frameworks/react" as const
                          }
                          platform={"nextjs"}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5J6Bk
                            )}
                          >
                            {"Read Documentation >"}
                          </div>
                        </p.PlasmicLink>

                        {true ? (
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__scMQb
                            )}
                            link={
                              "/docs/guides/deploying/frameworks/react" as const
                            }
                          >
                            {null}
                          </Button>
                        ) : null}
                      </div>
                    ) : null}
                  </div>
                </React.Fragment>
              }
            />
          </p.Stack>

          <section className={classNames(projectcss.all, sty.section__f3VEc)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__aXxhl)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__q7YXp)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__itUvv
                    )}
                  >
                    {"Your virtual Azure cloud architect. "}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oxumc
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "Azure is hugely powerful, but also hugely complex.  \n\nFathym automates a best practice platform for deploying and hosting applications in Azure, freeing up your senior engineers and empowering lower-level resources and even non developers to deploy and manage applications in your Azure cloud.  \n\nFathym provisions Azure services such as "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {
                        "Cosmos DB, Blob storage, App Service, AD B2C, API Gateway and Content Delivery Network"
                      }
                    </span>
                    <React.Fragment>
                      {
                        " out-of-the-box.  \n\nTake advantage of our simplified developer experience while deploying and scaling within your own Azure instance with full access to your code, infrastructure and Azure's extensive services.  \n\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {
                        "Build a future-proof tech stack from the get-go without the complexity. "
                      }
                    </span>
                  </React.Fragment>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vZsez)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__h3Qvl)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___4Wn9Z)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__olOgE
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nn0XC
                            )}
                          >
                            {
                              "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                            }
                          </div>
                        }
                        icon={
                          <HammerIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wwNqe
                            )}
                            role={"img"}
                          />
                        }
                        title={"Harder"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__hnPyR)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___9VkPb
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vWf
                            )}
                          >
                            {
                              "Consequat scelerisque a eros taciti nisl a sodales."
                            }
                          </div>
                        }
                        icon={
                          <TargetIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yyRfr
                            )}
                            role={"img"}
                          />
                        }
                        title={"Better"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__s8Gvf)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__z8MLy
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fCm5O
                            )}
                          >
                            {
                              "Varius ad malesuada ullamcorper cursus scelerisque a a."
                            }
                          </div>
                        }
                        icon={
                          <FastIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gWnpN
                            )}
                            role={"img"}
                          />
                        }
                        title={"Faster"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column___3Ygsh)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__hnf1G
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cgrsq
                            )}
                          >
                            {
                              "Ut eu nam nostra taciti congue adipiscing curabitur."
                            }
                          </div>
                        }
                        icon={
                          <StrongIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fwLf4
                            )}
                            role={"img"}
                          />
                        }
                        title={"Stronger"}
                        vertical={true}
                      />
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>
            </p.Stack>
          </section>

          <section className={classNames(projectcss.all, sty.section__fRxrV)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground4"}
              data-plasmic-override={overrides.foreground4}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground4)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___93KNu)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__rOJx)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___9G2Dg
                    )}
                  >
                    {"Cloud costs you can rely on. "}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p7P62
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.link__kzihl
                        )}
                        component={Link}
                        href={"https://www.fathym.com/dashboard/" as const}
                        platform={"nextjs"}
                      >
                        {""}
                      </p.PlasmicLink>
                    }
                    <React.Fragment>
                      {"Cloud cost management can be challenging, with "}
                    </React.Fragment>
                    {
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.link__zcCD
                        )}
                        component={Link}
                        href={
                          "https://www.hashicorp.com/state-of-the-cloud?" as const
                        }
                        platform={"nextjs"}
                      >
                        {"94% of organisations "}
                      </p.PlasmicLink>
                    }
                    <React.Fragment>
                      {
                        "reporting issues with cloud waste.  \n\nFathym addresses this by automating and deploying a best practice, cost effective, proven and scalable infrastructure in your Azure instance.\n\nFathym also provides hands on support to provide monitoring and implement rules and alerts to ensure your organization does not overstep its budget.\n\nFathym's virtual cloud architect charges "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"only as a small percentage"}
                    </span>
                    <React.Fragment>
                      {
                        " of your Azure cloud consumption costs, ensuring reliable, affordable and scalable cloud costs each month.\n\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"Sign up for free"}
                    </span>
                    <React.Fragment>
                      {
                        " to start deploying and hosting applications in our shared infrastructure environment.\n\nTo find out more about how Fathym can set up infrastructure in your own Azure instance, "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"contact sales@fathym.com"}
                    </span>
                    <React.Fragment>{"."}</React.Fragment>
                  </React.Fragment>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__avGs1)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__oKSrV)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___9M1Mn)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp___31UpW
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1Ztna
                            )}
                          >
                            {
                              "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                            }
                          </div>
                        }
                        icon={
                          <HammerIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___7Tk39
                            )}
                            role={"img"}
                          />
                        }
                        title={"Harder"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__lz65S)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__vB8Ft
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wmpFj
                            )}
                          >
                            {
                              "Consequat scelerisque a eros taciti nisl a sodales."
                            }
                          </div>
                        }
                        icon={
                          <TargetIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___9ZHy7
                            )}
                            role={"img"}
                          />
                        }
                        title={"Better"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__pCUhn)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__iTr3H
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zs7Jr
                            )}
                          >
                            {
                              "Varius ad malesuada ullamcorper cursus scelerisque a a."
                            }
                          </div>
                        }
                        icon={
                          <FastIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__djtcc
                            )}
                            role={"img"}
                          />
                        }
                        title={"Faster"}
                        vertical={true}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__sVg0)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__kcACr
                        )}
                        darkBackground={true}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9YEg3
                            )}
                          >
                            {
                              "Ut eu nam nostra taciti congue adipiscing curabitur."
                            }
                          </div>
                        }
                        icon={
                          <StrongIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__lAWe9
                            )}
                            role={"img"}
                          />
                        }
                        title={"Stronger"}
                        vertical={true}
                      />
                    </div>
                  </p.Stack>
                ) : null}
              </p.Stack>

              <div className={classNames(projectcss.all, sty.columns__rDmv5)}>
                <div className={classNames(projectcss.all, sty.column__xS28F)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__sLglQ)}
                    color={"blue" as const}
                    link={"https://www.fathym.com/dashboard/" as const}
                  >
                    {"Get Started for Free"}
                  </Button>
                </div>

                <div className={classNames(projectcss.all, sty.column__usm69)}>
                  {true ? (
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___6JvRu
                      )}
                      component={Link}
                      href={"/docs/guides/deploying/frameworks/react" as const}
                      platform={"nextjs"}
                    >
                      {"Learn more >"}
                    </p.PlasmicLink>
                  ) : null}
                </div>
              </div>
            </p.Stack>
          </section>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__u2XDz)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gb1T)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2FV5)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__jLdzu)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dqeZo
                      )}
                    >
                      {"Pricing plans"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wVxQ
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__bRq9S)}
                >
                  <PriceCard
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___2S6Y
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vgb2U
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rTe1P
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__muGj5
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wH9Db
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"0"}
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ti9Tr
                        )}
                      >
                        {"Buy Pro"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__ua8Kl
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__osyL6
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yJidu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__yuEoS
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___6LFcT
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__x6Xux
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__qyztp
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"8"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oBjU
                        )}
                      >
                        {"Pro"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qHizM
                        )}
                      >
                        {"Buy Team"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__unCKg
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___5GgkC
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___3AZvg
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vd8AV
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tBjSt
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__bXfxm
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__znmpL
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ipej
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__r4A1Y
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aoWp
                        )}
                      >
                        {"Team"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pZb7X
                        )}
                      >
                        {"Contact us"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__ejHsJ
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__n61En
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__pVkor
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__xo6Lk
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__movtV
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__kx9Lm
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vwAfX
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___0EluE
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zmSdi
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"?"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3Fz1G
                        )}
                      >
                        {"Enterprise"}
                      </div>
                    }
                    primary={true}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <FathymFooter
            data-plasmic-name={"fathymFooter"}
            data-plasmic-override={overrides.fathymFooter}
            className={classNames("__wab_instance", sty.fathymFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "img",
    "foreground2",
    "valuePropsSection",
    "banner",
    "foreground3",
    "foreground4",
    "fathymFooter"
  ],
  navbar: ["navbar"],
  foreground: ["foreground", "img"],
  img: ["img"],
  foreground2: ["foreground2"],
  valuePropsSection: ["valuePropsSection"],
  banner: ["banner"],
  foreground3: ["foreground3"],
  foreground4: ["foreground4"],
  fathymFooter: ["fathymFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  img: typeof p.PlasmicImg;
  foreground2: "div";
  valuePropsSection: typeof Section;
  banner: typeof Banner;
  foreground3: "div";
  foreground4: "div";
  fathymFooter: typeof FathymFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPagesAzure__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPagesAzure__VariantsArgs;
    args?: PlasmicLandingPagesAzure__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPagesAzure__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLandingPagesAzure__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicLandingPagesAzure__ArgProps,
          internalVariantPropNames: PlasmicLandingPagesAzure__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicLandingPagesAzure__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingPagesAzure";
  } else {
    func.displayName = `PlasmicLandingPagesAzure.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingPagesAzure = Object.assign(
  // Top-level PlasmicLandingPagesAzure renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    img: makeNodeComponent("img"),
    foreground2: makeNodeComponent("foreground2"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    banner: makeNodeComponent("banner"),
    foreground3: makeNodeComponent("foreground3"),
    foreground4: makeNodeComponent("foreground4"),
    fathymFooter: makeNodeComponent("fathymFooter"),

    // Metadata about props expected for PlasmicLandingPagesAzure
    internalVariantProps: PlasmicLandingPagesAzure__VariantProps,
    internalArgProps: PlasmicLandingPagesAzure__ArgProps
  }
);

export default PlasmicLandingPagesAzure;
/* prettier-ignore-end */
